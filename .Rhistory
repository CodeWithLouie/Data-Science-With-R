train$predictions <- predict(lm.model)
ggplot(train, aes(predictions, SalePrice)) +
geom_point()
ggplot(train, aes(predictions, SalePrice)) +
geom_point() +
ggplot(train, aes(predictions, SalePrice)) +
geom_point() +
geom_abline(color = "red")
ggplot(train, aes(predictions, SalePrice)) +
geom_point() +
geom_abline()
source("~/.active-rstudio-document")
err <- train$predictions - train$SalePrice
rmse <- sqrt(mean(err^2))
rmse
sd(train$SalePrice)
err2 <- err ^2
rmse <- sqrt(mean(err2))
rmse
rmse <- sqrt(mean(err^2))
rmse
sd(train$SalePrice)
glance(lm.model)$r.squared
library(rev)
library(vtreat)
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
setwd("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle")
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
ggplot(train, aes(predictions, SalePrice)) +
geom_point() +
geom_abline(color = "red") +
coord_fixed()
fmla2 <- as.formula("SalePrice ~ MSZoning +MSSubClass + Condition1 + LotArea +
Neighborhood + HouseStyle + OverallCond + BsmtCond +
Electrical + Bedroom + Kitchen + OpenPorchSF + PoolArea
+ Fence + YrSold + SaleType + SaleCondition")
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + HouseStyle + OverallCond + BsmtCond +
Electrical + Bedroom + Kitchen + OpenPorchSF + PoolArea
+ Fence + YrSold + SaleType + SaleCondition")
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + HouseStyle + OverallCond + BsmtCond +
Electrical + Bedroom + Kitchen + OpenPorchSF
+ Fence + YrSold + SaleType + SaleCondition")
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + OverallCond + BsmtCond +
Electrical + Bedroom + Kitchen + OpenPorchSF
+ Fence + YrSold + SaleType + SaleCondition")
ula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + OverallCond + BsmtCond + Electrical + Bedroom + Kitchen +
OpenPorchSF + YrSold + SaleType + SaleCondition")
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + OverallCond + BsmtCond + Electrical + Bedroom + Kitchen +
OpenPorchSF + YrSold + SaleType + SaleCondition")
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + HouseStyle + OverallCond + BsmtCond +
Electrical + Bedroom + Kitchen + OpenPorchSF + PoolArea
+ Fence + YrSold + SaleType + SaleCondition")
lm.model2 <- lm(fmla2, data = train)
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + OverallCond + BsmtCond + Electrical + Kitchen +
OpenPorchSF + YrSold + SaleType + SaleCondition")
lm.model2 <- lm(fmla2, data = train)
fmla2 <- as.formula("SalePrice ~ MSZoning + MSSubClass + Condition1 + LotArea +
Neighborhood + OverallCond + BsmtCond + Electrical + KitchenAbvGr +
OpenPorchSF + YrSold + SaleType + SaleCondition")
lm.model2 <- lm(fmla2, data = train)
lm.model2 %>%
glance()
glance(lm.model)
train$predictions2 <- predict(lm.model2)
train$predictions2 <- predict(lm.model2, newdata = train)
err2 <- train$predictions2 - train$SalePrice
rmse2 <- sqrt(mean(err2^2))
rmse2
rmse2
err2 <- train$predictions2 - train$SalePrice
rmse2 <- sqrt(mean(err2^2))
rmse2 <- sqrt(mean(err2^2, na.rm = TRUE))
rmse2
sd(train$SalePrice)
rmse
glance(lm.model)$sigma
glance(lm.model2)$sigma
fmla3 <- as.formula("SalePrice ~ OverallQual + YearBuilt")
lm.model3 <- lm(fmla3, data = train)
lm.model3
glance(lm.model3)
augment(lm.model3)
augment(lm.model3) %>%
arrange(desc(.hat))
fmla4 <- as.formula("SalePrice ~ YearBuilt + BedroomAbvGr + OpenPorchSF")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
fmla4 <- as.formula("SalePrice ~ YearBuilt + Utilities + Heating")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
fmla4 <- as.formula("SalePrice ~ YearBuilt")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
fmla4 <- as.formula("SalePrice ~ OverallQual")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
fmla4 <- as.formula("SalePrice ~ OverallQual + LotArea")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
augment(lm.model4) %>%
arrange(desc(.hat))
augment(lm.model4) %>%
arrange(desc(.hat)) +
head()
augment(lm.model4) %>%
arrange(desc(.hat)) %>%
head()
fmla4 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
augment(lm.model4) %>%
arrange(desc(.hat)) %>%
head()
fmla4 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType")
lm.model4 <- lm(fmla4, data = train)
glance(lm.model4)
augment(lm.model4) %>%
arrange(desc(.hat)) %>%
head()
wrapFTest(lm.model)
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
wrapFTest(lm.model)
wrapFTest(lm.model2)
wrapFTest(lm.model3)
wrapFTest(lm.model4)
augment(lm.model)
summary(lm.model)
fitted(lm.model)
glance(lm.model)
glance(lm.model) %>%
select(r.squared, sigma)
glance(lm.model) %>%
select(r.squared, sigma)
glance(lm.model2) %>%
select(r.squared, sigma)
glance(lm.model3) %>%
select(r.squared, sigma)
glance(lm.model4) %>%
select(r.squared, sigma)
glance(lm.model) %>%
select(r.squared, sigma)
glance(lm.model2) %>%
select(r.squared, sigma)
glance(lm.model3) %>%
select(r.squared, sigma)
glance(lm.model4) %>%
select(r.squared, sigma)
74.2-100
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + SaleCondition")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
glance(lm.model4)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + BsmtCond")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSubClass")
lm.model5 <- lm(fmla5, data = train)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass:MSZoning")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + MSZoning")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + OverallCond")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + Electrical")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + LandContour")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + LotConfig")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + YearRemodAdd")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + Heating")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + MiscFeature")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + MiscVal")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual + GarageArea")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageType")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + EnclosedPorch")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageCond")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageQual")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + LotShape")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
Neighborhood +
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + LandSlope")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + LandSlope")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + HouseStyle")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExteriorQual")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ FireplaceQu")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ Fireplaces")
lm.model5 <- lm(fmla5, data = train)
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ HeatingQC")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ LowQualFinSF")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ TotRmsAbvGrd")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ Functional")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual
+ Functional")
fmla5 <- as.formula("SalePrice ~ OverallQual + LotArea + Neighborhood +
SaleType + MSSubClass + BldgType + KitchenQual +
GarageArea + LotFrontage + ExterQual + RoofMatl + BsmtQual")
lm.model5 <- lm(fmla5, data = train)
glance(lm.model5)
augment(lm.model) %>%
select(.hat, .cooksd) %>%
arrange(.cooksd) %>%
head()
augment(lm.model) %>%
select(.hat, .cooksd) %>%
arrange(.cooksd) %>%
head()
augment(lm.model2) %>%
select(.hat, .cooksd) %>%
arrange(.cooksd) %>%
head()
augment(lm.model3) %>%
select(.hat, .cooksd) %>%
arrange(.cooksd) %>%
head()
augment(lm.model4) %>%
select(.hat, .cooksd) %>%
arrange(.cooksd) %>%
head()
augment(lm.model5) %>%
select(.hat, .cooksd) %>%
arrange(.cooksd) %>%
head()
augment(lm.model) %>%
arrange(.cooksd) %>%
head()
augment(lm.model2) %>%
arrange(.cooksd) %>%
head()
augment(lm.model3) %>%
arrange(.cooksd) %>%
head()
augment(lm.model4) %>%
arrange(.cooksd) %>%
head()
augment(lm.model5) %>%
arrange(.cooksd) %>%
head()
augment(lm.model) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model2) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model3) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model4) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model5) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model2) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model3) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model4) %>%
arrange(desc(.cooksd)) %>%
head()
augment(lm.model5) %>%
arrange(desc(.cooksd)) %>%
head()
wrapFTest(lm.model5)
83.36-100
test$predictions <- predict(lm.model5, newdata = test)
submission.file <- data.frame(
Id = 1:1459,
SalePrice = test$predictions
)
file.csv <- write.csv(submission.file, "House_file_prediction_lm.csv")
gc()
gc()
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
setwd("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle")
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
View(test)
source("~/Data Science Workspace/Data-Science-With-R/House Prices Prediction - Kaggle/house_prediction.R", echo=TRUE)
x <- data.frame(
x = runif(200, 100, 250),
y = runif(200, 300, 500)
)
xx <- kmeans(x, centers = 3, nstart = 20)
xx$cluster
plot(x, col = xx$cluster, main = "Kmeans clustering", xlab = "", ylab = "")
for(i in 1:10) {
xx <- kmeans(x, centers = 3, nstart = 1)
plot(x, col = xx$cluster, main = xx$tot.withinss, xlab = "", ylab = "")
}
# total within sum of square error
wss <- 0
# 1:10 clusters
for(i in 1:10) {
xx <- kmeans(x, centers = i, nstart = 20)
wss[i] <- xx$tot.withinss
}
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
k <- 2
dist_x <- dist(x)
hclust(d = dist_x)
summary(dist_x)
install.packages("rwhatsapp")
plot(dist_x)
x_plot <- hclust(d = dist_x)
plot(x_plot)
abline(h = 6, color = "red")
plot(x_plot) +
abline(h = 6, color = "red")
plot(x_plot) +
plot(x_plot) +
abline(h = 6, color = "red")
plot(x_plot) +
abline(h = 78, col = "red")
cutree(x_plot, h = 78)
cutree(x_plot, k = 78)
x_plot1 <- hclust(d = dist_x, method = "Average")
x_plot1 <- hclust(d = dist_x, method = "average")
plot(x_plot1)
x_plot1 <- hclust(d = dist_x, method = "single")
plot(x_plot1)
colMeans(x)
apply(x, 2:3, sd)
apply(x, 2, sd)
scaled_x <- scale(x)
colMeans(scaled_x)
apply(scale, 2, sd)
apply(scale_x, 2, sd)
apply(scaled_x, 2, sd)
pr.out <- prcomp(x,
scale = TRUE,
center = TRUE)
summary(pr.out)
biplot(pr.out)
pr.var <- pr.out$sdev^2
pve <- pr.var/sum(pr.var)
plot(pve)
plot(pve, ylim = c(0,1))
plot(cumsum(pve), ylim = c(0,1))
library(readr)
library(dplyr)
url <- "https://assets.datacamp.com/production/course_1903/
datasets/WisconsinCancer.csv"
cancer <- read_csv(url)
cancer <- read.csv(url)
cancer <- read.csv(url)
cancer <- read.csv("url")
setwd("~/Data Science Workspace")
download.file(url)
download.file(url, "cancer.csv")
download.file(url, "cancer.csv")
url <- c("https://assets.datacamp.com/production/course_1903/
datasets/WisconsinCancer.csv")
download.file(url, "cancer.csv")
url <- c("https://assets.datacamp.com/production/course_1903/
datasets/WisconsinCancer.csv")
download.file(url, "cancer.csv")
url <- c("https://assets.datacamp.com/production/course_1903/
datasets/WisconsinCancer.csv")
cancer.df <- read.csv(url)
install.packages(c("qdap", "lexicon"))
install.packages("tidytext")
age <- 10
while (age < 10) {
return(age)
}
while (age < 10) {
return(age)
age <- age -1
}
print(age)
for (i in age) {
if age <= 10 {
for (i in age) {
if age <= 10
for (i in age) {
if age <= 10
